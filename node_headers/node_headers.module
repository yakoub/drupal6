<?php

function node_headers_form_alter(&$form, &$form_state, $form_id) {
  if (isset($form['type']) and isset($form['#node'])) {
    $form['body_field']['body']['#process'] = array('node_blocks_dom');
    $form['#submit'][] = 'node_headers_node_form_submit';
  }
}

function node_blocks_dom($element) {
  if (!empty($element['#value'])) {
    $dom = new DOMDocument();
    $dom->loadHTML('<?xml encoding="UTF-8">' . $element['#value']);
    $element['body_dom_document'] = array(
      '#type' => 'value',
      '#value' => $dom,
    );

    $xpath = new DOMXPath($dom);
    $element['body_dom_xpath'] = array(
      '#type' => 'value',
      '#value' => $xpath,
    );
  }
  return $element;
}

function node_headers_node_form_submit(&$form, &$form_state) {
  $headers = node_headers_process_body($form_state['values']);
  if (!empty($form_state['values']['nid'])) {
    $cid = 'node_headers_' . $form_state['values']['nid'];
    cache_set($cid, $headers);
  }
}

function node_headers_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  if (!isset($node->body)) {
    return;
  }

  $cid = 'node_headers_' . $node->nid;
  static $once = 0;
  if ($op == 'load') {
    $cache = cache_get($cid);
    if (!$cache) {
      if ($once == $node->nid) {
        $node->headers_items = $node->header_groups = array();
        return;
      }
      $once = $node->nid;
      module_load_include('inc', 'node', 'node.pages');
      $form_state = array();
      $form_state['values'] = (array) $node;
      unset($form_state['values']['teaser']);
      $form_state['submit_handlers'] = array('node_form_submit');
      drupal_execute($node->type . '_node_form', $form_state, $node);
      $node->body = $form_state['values']['body'];
      $cache = cache_get($cid);
    }
    $headers = $cache->data;
    $node->headers_items = $headers['items'];
    $url = 'node/' . $node->nid;
    $options = array('fragment' => '');
    foreach ($node->headers_items as &$item) {
      $options['fragment'] = $item['id'];
      $item = l($item['text'], $url, $options);
    }
    $node->headers_groups = $headers['groups'];
  }
}

function node_headers_process_body(&$node) {
  $headers = array(
    'items' => array(),
    'groups' => array(),
  );
  
  if (empty($node['body_dom_document'])) {
    return $headers;
  }

  libxml_use_internal_errors(true);
  
  $body = $node['body'];
  $dom = $node['body_dom_document'];
  $xpath = $node['body_dom_xpath'];

  $titles = $xpath->query('//h1|//h2|//h3|//h4|//h5');

  foreach ($titles as $iter => $title) {
    $header_group = $title->nodeName;
    $id = $title->getAttribute('id');
    if (!$id) {
      $id = "header-anchor-${iter}";
      $title->setAttribute('id', $id);
    }
    $item = array('text' => $title->textContent, 'id' => $id);
    $headers['items'][] = $item;
    $headers['groups'][$header_group][] = $item;
  }

  $body = $dom->saveHTML();
  $open_body = strpos($body, '<body>');
  $close_body = strpos($body, '</body>');
  $body = substr($body, $open_body + 6, $close_body - $open_body - 6);
  libxml_use_internal_errors(false);

  return $headers;
}

function node_headers_block($op = 'list', $delta = 0, $edit = array()) {
  $return = 0;
  switch ($op) {
    case 'list':
      $return = array();
      $return['headers_view'] = array(
        'info' => 'Node Html Headers',
        'visibility' => 1,
        'pages' => 'node/*',
        'cache' => BLOCK_NO_CACHE,

      );
      break;
    case 'view':
      if ($delta == 'headers_view') {
        $node = menu_get_object('node', 1);
        if ($node) {
          $hook = array('headers__' . $node->type, 'headers');
          $return = array(
            'subject' => '',
            'content' => theme($hook, $node->headers_items, $node->headers_groups),
          );
        }
      }
      break;
  }
  return $return;
}
/**/
function node_headers_theme() {
  $themes = array();
  $themes['headers'] = array(
    'template' => 'headers',
    'pattern' => 'headers__',
    'arguments' => array(
      'items' => array(),
      'groups' => array(), 
    ),
  );
  return $themes;
}

